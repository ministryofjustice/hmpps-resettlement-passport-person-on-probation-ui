version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8
  slack: circleci/slack@4.12.5

parameters:
  alerts-slack-channel:
    type: string
    # Normally team specific alert channel e.g. hmpps_tech_alerts, syscon-alerts, dps_sed_alerts
    # This is to avoid a general alert dumping ground that no-one then monitors
    default: dps_alerts_security

  releases-slack-channel:
    type: string
    default: resettlement_passport_releases

  node-version:
    type: string
    default: 20.11-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build
            - dist
            - assets/stylesheets

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  e2e_test:
    circleci_ip_ranges: true
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: "7.0"
    steps:
      - checkout
      - run:
          name: Install project dependencies
          command: npm i
      - run:
          name: Install Playwright browsers
          command: npx playwright install --with-deps
      - run:
          name: Run cucumber tests
          command: |
            export BASEURL=${DEV_BASEURL}
            export PSFRURL=${DEV_PSFRURL}
            export USEREMAIL=testuserpyf+151@gmail.com
            export USERPASSWORD=${E2E_USERPASSWORD}
            export GMAIL_CLIENT_ID=${E2E_GMAIL_CLIENT_ID}
            export GMAIL_CLIENT_SECRET=${E2E_GMAIL_CLIENT_SECRET}
            export GMAIL_PROJECT_ID=${E2E_GMAIL_PROJECT_ID}
            export GMAIL_TOKEN=${E2E_GMAIL_TOKEN}
            export USERNAME=${E2E_USERNAME}
            export PASSWORD=${E2E_PASSWORD}
            npm run end-to-end-test
      - store_test_results:
          path: test_results

  api_smoke_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest
    steps:
      - checkout
      - run:
          command: |
            k6 run -e CLIENT_ID=${API_CLIENT_ID} -e CLIENT_SECRET=${API_CLIENT_SECRET} pt_tests/tests/run.js
          environment:
            EXECUTION_TYPE: apiSmoke
            PROCESS: dev
  
  api_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest
    steps:
      - checkout
      - run:
          command: |
            k6 run -e CLIENT_ID=${API_CLIENT_ID} -e CLIENT_SECRET=${API_CLIENT_SECRET} pt_tests/tests/run.js
          environment:
            EXECUTION_TYPE: api
            PROCESS: dev            

  browser_smoke_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest-with-browser
    steps:
      - checkout
      - run:
          command: |
            k6 run pt_tests/tests/run.js --no-setup
          environment:
            EXECUTION_TYPE: smoke
            PROCESS: dev      

  browser_stress_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest-with-browser
    steps:
      - checkout
      - run:
          command: |
            k6 run pt_tests/tests/run.js --no-setup
          environment:
            EXECUTION_TYPE: stress
            PROCESS: dev

  browser_load_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest-with-browser
    steps:
      - checkout
      - run:
          command: |
            k6 run pt_tests/tests/run.js --no-setup
          environment:
            EXECUTION_TYPE: load
            PROCESS: dev

  browser_soak_test:
    circleci_ip_ranges: true
    docker:
      - image: grafana/k6:latest-with-browser
    steps:
      - checkout
      - run:
          command: |
            k6 run pt_tests/tests/run.js --no-setup
          environment:
            EXECUTION_TYPE: soak
            PROCESS: dev

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: "7.0"
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.3.1/wiremock-standalone-3.3.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Wait for wiremock to start
          command: sleep 5
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - e2e_test:
          filters:
            branches:
              only:
                - main
          requires:
            - deploy_dev
      - browser_smoke_test:
          filters:
            branches:
              only:
                - main
          requires:
            - deploy_dev
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - hmpps-resettlement-passport-person-on-probation-ui-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-resettlement-passport-person-on-probation-ui-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "24 9 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_outdated:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "24 9 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
